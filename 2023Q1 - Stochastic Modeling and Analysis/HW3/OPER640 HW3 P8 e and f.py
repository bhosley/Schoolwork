ep = np.matrix([[0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], #0
               [0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], #1
               [0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], #2
               [0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], #3
               [0.0, 0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], #4
               [0.0, 0.0, 0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0], #5
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0], #6
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0], #7
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], #8
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], #7,off
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], #6,off
               [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] #5,off
               ]) 

dim,_ = np.shape(ep)

I = np.identity(dim)

eA_bal = I - ep.T
eA_norm = np.matrix(np.ones(dim))

eb_bal = np.matrix(np.zeros((dim,1)))
eb_norm = np.matrix(1)

eA = np.vstack((eA_bal, eA_norm))
eb = np.vstack((eb_bal, eb_norm))

eA = np.delete(eA,0,0)
eb = np.delete(eb,0,0)

epi = np.linalg.solve(eA,eb)
print(epi)

#######################################################################

fp = np.matrix([[0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0], #0
               [0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0, 0.0], #1
               [0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0, 0.0], #2
               [0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0, 0.0], #3
               [0.0, 0.0, 0.0, 0.2025, 0.495, 0.3025, 0.0, 0.0], #4
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], #5
               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], #4,off
               [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0] #3,off
               ]) 

dim,_ = np.shape(fp)

I = np.identity(dim)

fA_bal = I - fp.T
fA_norm = np.matrix(np.ones(dim))

fb_bal = np.matrix(np.zeros((dim,1)))
fb_norm = np.matrix(1)

fA = np.vstack((fA_bal, fA_norm))
fb = np.vstack((fb_bal, fb_norm))

fA = np.delete(fA,0,0)
fb = np.delete(fb,0,0)

fpi = np.linalg.solve(fA,fb)
print(fpi)