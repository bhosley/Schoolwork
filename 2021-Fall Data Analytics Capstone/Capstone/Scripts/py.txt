import matplotlib.cm as cm
from scipy.ndimage.filters import gaussian_filter

def myplot(x, y, s, bins=1000):
    heatmap, xedges, yedges = np.histogram2d(x, y, bins=bins)
    heatmap = gaussian_filter(heatmap, sigma=s)

    extent = [xedges[0], xedges[-1], yedges[0], yedges[-1]]
    return heatmap.T, extent

img, extent = myplot(x, y, s)
ax.imshow(img, extent=extent, origin='lower', cmap=cm.jet)
ax.set_title("Smoothing with  $\sigma$ = %d" % s)

____________________________________________________________

fig = plt.figure()
ax = fig.add_subplot(111, polar=True)
ax.plot(theta, r, 'o')

ax.grid(alpha=0.2)   
ax.set_xticklabels([])


ax.annotate("9", xy=[theta,r], rotation=none)

fig.show()



import numpy as np

def cart2pol(x, y):
    rho = np.sqrt(x**2 + y**2)
    phi = np.arctan2(y, x)
    return(rho, phi)

def pol2cart(rho, phi):
    x = rho * np.cos(phi)
    y = rho * np.sin(phi)
    return(x, y)

def pol2cart(r, theta):
    '''
    Parameters:
    - r: float, vector amplitude
    - theta: float, vector angle
    Returns:
    - x: float, x coord. of vector end
    - y: float, y coord. of vector end
    '''

    z = r * np.exp(1j * theta)
    x, y = z.real, z.imag

    return x, y

def cart2pol(x, y):
    '''
    Parameters:
    - x: float, x coord. of vector end
    - y: float, y coord. of vector end
    Returns:
    - r: float, vector amplitude
    - theta: float, vector angle
    '''

    z = x + y * 1j
    r, theta = np.abs(z), np.angle(z)

    return r, theta

#############################################

import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()
ax = fig.add_subplot(111, polar=True)

ax.grid(alpha=0.2)   
ax.axes.get_xaxis().set_ticks([])
ax.axes.get_yaxis().set_ticklabels([])
ax.set_ylim([0, 77.75])

rings = [2.5, 5.75]
for i in range(0,8):
    y = ((8-i)*8) + 5.75
    ax.annotate(str(i+1), xy=(0, y))
    rings.append(y)
    
ax.axes.get_yaxis().set_ticks(rings)
ax.fill_between(
    np.linspace(0, 2*np.pi, 100),    # Theta fill range
    0, 29.75,                        # Radius fill range
    color='grey', alpha=0.25, linewidth=0
)

fig.show()