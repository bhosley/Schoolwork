Colleges <- read.csv("C:/Users/Brando/OneDrive/Documents/SchoolWork/Machine Learning/Final Project/colleges.csv")
library(C50)
library(caret)
library(gmodels)
library(neuralnet)
set.seed(12345)
#   Adding Elite boolean
Colleges["Elite"] <- NA
Colleges$Elite <- ifelse(Colleges$Top10perc > 50,1,0)
normalize <- function(x) {return((x - min(x)) / (max(x) - min(x)))}
Colleges_n <- data.frame(Colleges[2],lapply(Colleges[3:5], normalize),lapply(Colleges[7:20],normalize))
Colleges_n$Private <- ifelse(as.character(Colleges_n$Private) == "Yes",1,0)
#
#    Using Artifical Neural Networks
#
ANN_train <- Colleges_n[1:583,]
ANN_test <- Colleges_n[584:777,]
ANN_model <- neuralnet(Elite ~ Private + Apps + Enroll + Top25perc + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = ANN_train)
ANN_predictions <- compute(ANN_model, ANN_test)
cor(ANN_predictions$net.result, ANN_test$Elite)
#   Attempt to improve ANN model
ANN_model_4 <- neuralnet(Elite ~ Private + Apps + Enroll + Top25perc + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = ANN_train, hidden = 4)
ANN_predictions_4 <- compute(ANN_model_4, ANN_test)
cor(ANN_predictions_4$net.result, ANN_test$Elite)
#
#    Using a C5.0 Model:
#
train_sample <- sample(777, 700)
C5_train <- Colleges[train_sample, ]
C5_test <- Colleges[-train_sample, ]
C5_train <- data.frame(C5_train[2:5], C5_train[7:20])
C5_test <- data.frame(C5_test[2:5], C5_test[7:20])
C5_model <- C5.0(C5_train[-18], as.factor(C5_train$Elite))
C5_predictions <- predict(C5_model,C5_test)
CrossTable(C5_test$Elite, C5_predictions, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, dnn = c('Actual Elite', 'Predicted Elite'))
#
#    Use Caret Package to tune the above models
#
Caret_C5m <- train(as.factor(Elite) ~ Private + Apps + Enroll + Top25perc + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = C5_train, method = "C5.0")
Caret_C5p <- predict(Caret_C5m, C5_test)
table(Caret_C5p, C5_test$Elite)
#
invisible(capture.output(
Caret_NNm <- train(as.factor(Elite) ~ Private + Apps + Enroll + Top25perc + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = ANN_train, method = "nnet")
))
Caret_NNp <- predict(Caret_NNm, ANN_test)
table(Caret_NNp, ANN_test$Elite)
#
#    Use an ensemble model
#
grid_rf <- expand.grid(.mtry = c(2, 4, 8, 16))
ctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 10)
#
Caret_RFm <- train(as.factor(Elite) ~ Private + Apps + Enroll + Top25perc + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = C5_train, method = "rf", , metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
Caret_RFm
Caret_RFm <- train(as.factor(Elite) ~ Private + Apps + Enroll + F.Undergrad + P.Undergrad + Outstate + Room.Board + Books + Personal + PhD + Terminal + S.F.Ratio + perc.alumni + Expend + Grad.Rate, data = C5_train, method = "rf", , metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
Caret_RFm
